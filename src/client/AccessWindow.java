package client;

import client.ReceiveContent;
import client.SendContent;
import client.SharingCaller;
import commons.Content;
import commons.ContentType;
import utils.ClipboardHandler;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.Socket;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import client.ui.ChatPage;


/**
 *
 * @author Nikhil
 */
public class AccessWindow extends javax.swing.JFrame {

    /**
     * Creates new form AccessWindow
     */
    private Client client = null;
    private ReceiveContent ri = null;
    private SendContent sendData = null;
    private SharingCaller c = null;

    JMenuBar menuBar;
    JMenu menu;
    JMenuItem menuItem;
    private ChatPage chatPage = null;
    private ClipboardHandler clipboardHandler = null;

    private Dimension clientScreenSize;

    public AccessWindow(Client client) {
        initComponents();
        this.client = client;
        this.clientScreenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        initClipBoard();

        initJMenuBar();
    }

    private void initJMenuBar() {
        menuBar = new JMenuBar();

        //Build the first menu.
        menu = new JMenu("Menu");
        menuBar.add(menu);
        menuItem = new JMenuItem("Chat");
        menu.add(menuItem);

        this.setJMenuBar(menuBar);
        chatPage = new ChatPage(null, this);
        menuItem.addActionListener((ActionEvent e) -> {
            if (chatPage != null) {
                chatPage.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Chat Frame is already open ");
            }
//                new ChatPage().setVisible(true);
        });
    }

    private void initClipBoard() {
        clipboardHandler = new ClipboardHandler(Toolkit.getDefaultToolkit().getSystemClipboard(), () -> {
            String content = "";
            System.out.println("in process of acesswindow");
            if (clipboardHandler.getCurrDataFlavor() == DataFlavor.stringFlavor) {
                try {
                    content = (String) clipboardHandler.getClipboardContent(DataFlavor.stringFlavor);
                } catch (UnsupportedFlavorException ex) {
                    System.out.println("AccessWindow.<init>()" + ex);
                } catch (IOException ex) {
                    System.out.println("AccessWindow.<init>()" + ex);
                }
            }
            System.out.println("my clip board contents : " + content);
            sendData.sendClipboardContent(content);
        });
    }

    public SendContent getSendData() {
        return sendData;
    }
    public void showMessageOnChat(String str){
        chatPage.append(str);
    }
    
    public void setClipboardContent(String str){
        clipboardHandler.setStringOnClipboard(str);
    }

    public void start() {
        ri = new ReceiveContent(this, client);
        ri.recieveData();
        sendData = new SendContent(client);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel1MouseMoved(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1366, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseMoved
        sendData.sendCordinates(ContentType.MOUSEMOVED, evt.getPoint(), -1);
    }//GEN-LAST:event_jLabel1MouseMoved

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        sendData.sendCordinates(ContentType.MOUSEPRESS, evt.getPoint(), evt.getButton());
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseReleased
        sendData.sendCordinates(ContentType.MOUSERELEASE, evt.getPoint(), evt.getButton());
    }//GEN-LAST:event_jLabel1MouseReleased

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        sendData.sendKeyCode(ContentType.KEYPRESS,evt.getKeyCode());
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        sendData.sendKeyCode(ContentType.KEYRELEASE,evt.getKeyCode());
    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccessWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccessWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccessWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccessWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccessWindow(null).setVisible(true);
            }
        });
    }

    public Image scaleImage(BufferedImage im) {
        return new ImageIcon(im).getImage().getScaledInstance((int) clientScreenSize.getWidth() - 50, (int) clientScreenSize.getHeight() - 50, Image.SCALE_AREA_AVERAGING);
    }

    public void displayImage(BufferedImage image) {
        jLabel1.setIcon(new ImageIcon(image));
    }

    public JLabel getLabel() {
        return jLabel1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
